from socket import *
import time
import random
serverPort = 12000	# porta do servidor

#criar socket e coloca endereco de ip no socket
serverSocket = socket(AF_INET, SOCK_DGRAM)
serverSocket.bind(('', serverPort))
serverSocket.settimeout(5)

#inicializa variaveis
ACK = 1
ack = []
seq_exp = 0
print 'The server is ready to receive'
lastpkgrcv = time.time()	
starttime = time.time()
endoffile = False

#envia/recebe dados
while 1:
	try:
		received_bin = []
		received_message = []
		full_info, clientAddress = serverSocket.recvfrom(2048)
		
		message, middle, received_cs = full_info.partition("*")

		received_cs, middle, sequence_number = received_cs.partition("*")

		auxMsg = message
		sum = 0
		if (len(auxMsg) % 2) != 0:
			auxMsg += "0"
		for i in range(0, len(auxMsg), 2):
			msg16 = ord(auxMsg[i]) + (ord(auxMsg[i+1]) << 8)
			sum += msg16
			sum = (sum & 0xffff) + (sum >> 16)
		calculated_cs = ~sum & 0xffff

		print "\nChecksum calculado: " + str(calculated_cs)
		print "Sequence number: " + str(seq_exp)

		#checa valor da sequenia esperada contra a recebida - IN ORDER 
		if str(received_cs) == str(calculated_cs): # recebido sem estar corrompido
			if(str(sequence_number) == str(seq_exp)): #na ordem
				r = random.random()
				if (r <= 0.1): #simulacao de perda de pacote, probabilidade de 0.1
					print '\033[91m' + '\nSimulating packet loss' + '\033[0m'
					continue
				if (message == ''):
					endoffile = True
				modifiedMessage = message.upper()
				ackmsg = modifiedMessage + "*" + str(calculated_cs) + "*" + str(seq_exp)
				serverSocket.sendto(ackmsg, clientAddress)
				seq_exp += 1
			else: #fora da ordem
				print '\033[91m' + '\nerror detected - OUT OF ORDER' + '\033[0m'
				modifiedMessage = message.upper()
				ackmsg = modifiedMessage + "*" + str(calculated_cs) + "*" + str(seq_exp)
				serverSocket.sendto(ackmsg, clientAddress)
		else:
			print '\033[91m' + "\nerror detected - CORRUPTION" + '\033[0m'
	
	except:
		if endoffile:
			if(time.time()-lastpkgrcv > 5):
				break
		
endtime = time.time()

print '\nFILE TRANFER SUCCESSFUL'
print "TIME TAKEN " , str(endtime - starttime)
